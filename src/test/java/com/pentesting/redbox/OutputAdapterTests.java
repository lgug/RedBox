package com.pentesting.redbox;

import com.pentesting.redbox.adapters.Fping_OutputAdapter;
import com.pentesting.redbox.adapters.Ifconfig_OutputAdapter;
import com.pentesting.redbox.adapters.NMAP_OutputAdapter;
import com.pentesting.redbox.persistence.entities.Command;
import com.pentesting.redbox.persistence.entities.OutputCommand;
import com.pentesting.redbox.service.AdaptOutputService;
import com.pentesting.redbox.service.ExecuteCommandService;
import com.pentesting.redbox.utils.exceptions.CannotAdaptCommandOutputException;
import com.pentesting.redbox.utils.exceptions.ProgramNotFoundException;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.Arrays;
import java.util.Collections;

@RunWith(SpringRunner.class)
@SpringBootTest
public class OutputAdapterTests {

    @Autowired
    ExecuteCommandService executeCommandService;

    @Autowired
    AdaptOutputService adaptOutputService;

    /*@Test
    @SuppressWarnings("ConstantConditions")
    public void test() throws CannotAdaptCommandOutputException, ProgramNotFoundException {
        OutputCommand o1 = executeCommandService.execute(
                new Command("ifconfig", Collections.singletonList("-a"))).get();
        OutputCommand o2 = executeCommandService.execute(
                new Command("nmap", Collections.singletonList("127.0.0.1"))).get();

        Fping_OutputAdapter fping_outputAdapter = adaptOutputService.adaptToFping(Collections.singletonList("google.com is alive"));
        Ifconfig_OutputAdapter ifconfig_outputAdapter = adaptOutputService.adaptToIfconfig(o1.getResultString());
        NMAP_OutputAdapter nmap_outputAdapter = adaptOutputService.adaptToNMAP(o2.getResultString());

        Assert.assertTrue(fping_outputAdapter.isAlive());
        Assert.assertTrue(ifconfig_outputAdapter.getInterfaceList().size() > 0);
        Assert.assertTrue(nmap_outputAdapter.getHostScanList().size() > 0);
    }*/
}
