package com.pentesting.redbox;

import com.pentesting.redbox.persistence.entities.Command;
import com.pentesting.redbox.service.ExecuteCommandService;
import com.pentesting.redbox.service.SystemService;
import com.pentesting.redbox.utils.ExecutionManager;
import com.pentesting.redbox.utils.exceptions.ProgramNotFoundException;
import com.pentesting.redbox.utils.exceptions.SystemCommandException;
import org.hamcrest.Description;
import org.hamcrest.Matcher;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.*;

@RunWith(SpringRunner.class)
@SpringBootTest
public class RedboxApplicationTests {

	@Autowired
	private ExecuteCommandService executeCommandService;

	@Autowired
	private SystemService systemService;

	@Test
	public void contextLoads() {
	}

	@Test
	public void servicesTest() throws ProgramNotFoundException, SystemCommandException {

		//ExecuteCommandService
		Command command1 = new Command(new Date(), "echo", Collections.singletonList("this is a test!"));
		Command command2 = new Command(new Date(), "whoami", null);
		Command command3 = new Command(new Date(), "ifconfig", null);

//		Assert.assertEquals("this is a test!", executeCommandService.execute(command1).get().getResultString().get(0));
//		Assert.assertTrue(executeCommandService.execute(command2).get().getResultString().get(0).matches("[^\\s]+"));
//		Assert.assertTrue(executeCommandService.execute(command3).get().getResultString().size() > 0);

		//SudoAuthorization
//		systemService.getRootAuthorization("password");
		List<Command> commands = new ArrayList<Command>() {
			{
				add(command1);
				add(command2);
				add(command3);
			}
		};
		//ExecutionManager.createScript(commands, "sc");
		ExecutionManager.executeScript(Paths.get("/src/java/resources/scripts/sc.sh"));
	}

}