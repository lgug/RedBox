package com.pentesting.redbox.service;

import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.pentesting.redbox.persistence.entities.Command;
import com.pentesting.redbox.utils.ExecutionManager;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

@Service
public class SSHConnectionServiceImpl implements SSHConnectionService {

    @Override
    public void openConnection(String AESPassword) throws JSchException, IOException, InterruptedException {
        String username = ExecutionManager.getEnvironmentVariable("USER");
        Properties properties = new Properties();
        properties.put("StrictHostKeyChecking", "no");
        JSch jSch = new JSch();
        Session session = jSch.getSession(username, "localhost", 30022);
        session.setPassword(AESPassword); //password sarÃ  decriptata con AES
        session.setConfig(properties);
        session.connect();

        ChannelExec channelExec = (ChannelExec) session.openChannel("exec");
        channelExec.setCommand(new Command("whoami", null).getFullCommand());

        InputStream in = channelExec.getInputStream();
        channelExec.connect();
        byte[] tmp = new byte[1024];
        while (true) {
            while (in.available() > 0) {
                int i = in.read(tmp, 0, 1024);
                if (i < 0) {
                    break;
                }
                System.out.print(new String(tmp, 0, i));
            }
            if (channelExec.isClosed()) {
                System.out.println("Exit Status: "
                        + channelExec.getExitStatus());
                break;
            }
            Thread.sleep(1000);
        }
        channelExec.disconnect();
        session.disconnect();
    }

    @Override
    public void launchCommand(Command command) {

    }

    @Override
    public void closeConnection() {

    }
}
