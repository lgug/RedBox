package com.pentesting.redbox.persistence.entities;

//import javax.persistence.Entity;
//import javax.persistence.Id;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

//@Entity
public class Command {

//    @Id
//    @NotNull @NotEmpty @NotBlank
    private Date commandDate;
//    @NotNull @NotEmpty @NotBlank
    private String command;
//    @NotBlank
    private List<String> parameters;

    public Command() {
        this.commandDate = new Date();
    }

    public Command(/*@NotNull @NotEmpty @NotBlank*/ Date commandDate,
                   /*@NotNull @NotEmpty @NotBlank*/ String command,
                   /*@NotBlank*/ List<String> parameters) {
        this.commandDate = commandDate;
        this.command = command;
        this.parameters = parameters;
    }

    public Command(/*@NotNull @NotEmpty @NotBlank*/ String command,
            /*@NotBlank*/ List<String> parameters) {
        this.commandDate = new Date();
        this.command = command;
        this.parameters = parameters;
    }

    public String getFullCommand() {
        StringBuilder result = new StringBuilder();
        result.append(command).append(" ");
        if (parameters != null && parameters.size() > 0) {
            for (String parameter: parameters) {
                result.append(parameter).append(" ");
            }
        }
        return result.deleteCharAt(result.length() - 1).toString();
    }

    public String[] toArray() {
        List<String> fullList;
        if (parameters != null) fullList = new ArrayList<>(parameters);
        else fullList = new ArrayList<>();

        fullList.add(0, command);
        Object[] objects = fullList.toArray();
        String[] result = new String[fullList.size()];
        for (int i = 0; i<fullList.size(); i++) {
            result[i] = (String) objects[i];
        }
        return result;
    }

    public Date getCommandDate() {
        return commandDate;
    }

    public void setCommandDate(Date commandDate) {
        this.commandDate = commandDate;
    }

    public String getCommand() {
        return command;
    }

    public void setCommand(String command) {
        this.command = command;
    }

    public List<String> getParameters() {
        return parameters;
    }

    public void setParameters(List<String> parameters) {
        this.parameters = parameters;
    }

}
