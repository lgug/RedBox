package com.pentesting.redbox.advisors;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.IOException;
import java.util.List;

public class OpenVasAdvisor implements Advisor {

    @Override
    public List<String> getErrorStrings(List<String> outputLines) {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        String string = "";
        if (outputLines.size() == 1) string = outputLines.get(0);
        else {
            for (String line: outputLines) {
                string += line;
            }
        }
        try {
            DocumentBuilder documentBuilder = factory.newDocumentBuilder();
            Document document = documentBuilder.parse(string);
            Element element = document.getDocumentElement();
            //...

        } catch (ParserConfigurationException | IOException | SAXException e) {
            e.printStackTrace();
        }
        return null;
    }

    @Override
    public List<String> getWarningStrings(List<String> outputLines) {
        //...
        return null;
    }

    @Override
    public List<String> getSuccessfulStrings(List<String> outputLines) {
        //...
        return null;
    }
}
