package com.pentesting.redbox.advisors;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@SuppressWarnings("ResultOfMethodCallIgnored")
public class MetasploitAdvisor implements Advisor {

    @Override
    public List<String> getErrorStrings(List<String> outputLines) {
        List<String> errorList = new ArrayList<>();
        Pattern errorPattern = Pattern.compile("\\[\\-\\]\\s?(.*)");

        addMatchesToList(outputLines, errorList, errorPattern);

        return errorList;
    }

    @Override
    public List<String> getWarningStrings(List<String> outputLines) {
        List<String> warningList = new ArrayList<>();
        Pattern warningPattern = Pattern.compile("\\[!\\]\\s?(.*)");

        addMatchesToList(outputLines, warningList, warningPattern);

        return warningList;
    }

    @Override
    public List<String> getSuccessfulStrings(List<String> outputLines) {
        List<String> successfulList = new ArrayList<>();
        Pattern successfulPatten = Pattern.compile("[\\[\\*\\]]?\\s?(.*)");

        addMatchesToList(outputLines, successfulList, successfulPatten);

        return null;
    }

    private void addMatchesToList(List<String> outputLines, List<String> list, Pattern pattern) {
        for (String line: outputLines) {
            if (pattern.matcher(line).matches()) {
                Matcher matcher = pattern.matcher(line);
                matcher.matches();
                list.add(matcher.group(1));
            }
        }
    }
}
