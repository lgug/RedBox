package com.pentesting.redbox.adapters;

import com.pentesting.redbox.adapters.utils.TaskResult;
import com.pentesting.redbox.adapters.utils.Vulnerability;

public class OpenVAS_OutputAdapter extends OutputAdapter {

    private static final String TYPE = "openvas";

    private String resultType;

    private String configId;
    private String targetId;
    private String taskId;
    private String reportId;
    private String taskStatus;
    private TaskResult taskResult;

    public OpenVAS_OutputAdapter() {
        super(TYPE);
    }

    public OpenVAS_OutputAdapter(String resultType,
                                 String configId,
                                 String targetId,
                                 String taskId,
                                 String reportId,
                                 String taskStatus,
                                 TaskResult taskResult) {
        super(TYPE);
        this.resultType = resultType;
        this.configId = configId;
        this.targetId = targetId;
        this.taskId = taskId;
        this.reportId = reportId;
        this.taskStatus = taskStatus;
        this.taskResult = taskResult;
    }

    public String getResultType() {
        return resultType;
    }

    public void setResultType(String resultType) {
        this.resultType = resultType;
    }

    public String getConfigId() {
        return configId;
    }

    public void setConfigId(String configId) {
        this.configId = configId;
    }

    public String getTargetId() {
        return targetId;
    }

    public void setTargetId(String targetId) {
        this.targetId = targetId;
    }

    public String getTaskId() {
        return taskId;
    }

    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public String getReportId() {
        return reportId;
    }

    public void setReportId(String reportId) {
        this.reportId = reportId;
    }

    public String getTaskStatus() {
        return taskStatus;
    }

    public void setTaskStatus(String taskStatus) {
        this.taskStatus = taskStatus;
    }

    public TaskResult getTaskResult() {
        return taskResult;
    }

    public void setTaskResult(TaskResult taskResult) {
        this.taskResult = taskResult;
    }

    public void calculateThreatTypesNumber() {
        Integer log = 0;
        Integer low = 0;
        Integer medium = 0;
        Integer high = 0;
        for (Vulnerability vulnerability: taskResult.getVulnerabilityList()) {
            if (vulnerability.getThreatLevel().matches("Log.*")) log++;
            else if (vulnerability.getThreatLevel().matches("Low.*")) low++;
            else if (vulnerability.getThreatLevel().matches("Medium.*")) medium++;
            else if (vulnerability.getThreatLevel().matches("High.*")) high++;
        }
        this.taskResult.setLogNumber(log);
        this.taskResult.setLowNumber(low);
        this.taskResult.setMediumNumber(medium);
        this.taskResult.setHighNumber(high);
    }
}
