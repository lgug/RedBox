package com.pentesting.redbox.adapters;

import com.pentesting.redbox.beans.TaskResult;
import com.pentesting.redbox.beans.Vulnerability;

public class ReportResponse_OpenVAS_OutputAdapter extends OpenVAS_OutputAdapter {

    private String reportId;
    private TaskResult taskResult;

    public ReportResponse_OpenVAS_OutputAdapter() {
    }

    public ReportResponse_OpenVAS_OutputAdapter(String reportId, TaskResult taskResult) {
        this.reportId = reportId;
        this.taskResult = taskResult;
    }

    public String getReportId() {
        return reportId;
    }

    public void setReportId(String reportId) {
        this.reportId = reportId;
    }

    public TaskResult getTaskResult() {
        return taskResult;
    }

    public void setTaskResult(TaskResult taskResult) {
        this.taskResult = taskResult;
    }

    public void calculateThreatTypesNumber() {
        Integer log = 0;
        Integer low = 0;
        Integer medium = 0;
        Integer high = 0;
        for (Vulnerability vulnerability: taskResult.getVulnerabilityList()) {
            if (vulnerability.getThreatLevel().matches("Log.*")) log++;
            else if (vulnerability.getThreatLevel().matches("Low.*")) low++;
            else if (vulnerability.getThreatLevel().matches("Medium.*")) medium++;
            else if (vulnerability.getThreatLevel().matches("High.*")) high++;
        }
        this.taskResult.setLogNumber(log);
        this.taskResult.setLowNumber(low);
        this.taskResult.setMediumNumber(medium);
        this.taskResult.setHighNumber(high);
    }

}
