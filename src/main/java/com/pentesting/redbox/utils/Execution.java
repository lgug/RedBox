package com.pentesting.redbox.utils;

import com.pentesting.redbox.persistence.entities.Command;
import com.pentesting.redbox.persistence.entities.OutputCommand;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Execution {

    public static OutputCommand execute(Command command) {
        List<String> output = new ArrayList<>();
        List<String> error = new ArrayList<>();

        Process process;
        String fullCommand = command.getFullCommand();
        try {
            process = Runtime.getRuntime().exec(fullCommand);

            BufferedReader successBuffer = new BufferedReader(
                    new InputStreamReader(process.getInputStream())
            );
            String s1;
            while ((s1 = successBuffer.readLine()) != null) {
                output.add(s1);
            }

            BufferedReader errorBuffer = new BufferedReader(
                    new InputStreamReader(process.getErrorStream())
            );
            String s2;
            while ((s2 = errorBuffer.readLine()) != null) {
                error.add(s2);
            }

            process.waitFor();
            process.destroy();
        } catch (IOException | InterruptedException e) {
            return new OutputCommand(command, OutputStatus.NOT_FOUND, Collections.singletonList(e.getMessage()));
        }
        if (error.size() > 0) return new OutputCommand(command, OutputStatus.ERROR, error);
        else return new OutputCommand(command, OutputStatus.SUCCESS, output);
    }

}
